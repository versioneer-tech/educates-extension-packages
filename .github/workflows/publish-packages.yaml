name: Publish packages

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  discover-packages:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set matrix
        id: set-matrix
        run: |
          # Define a whitelist of packages to be published
          WHITELISTED_PACKAGES=("awscli" "rclone")

          PACKAGE_DIRS=$(find packages -mindepth 1 -maxdepth 1 -type d -print)
          
          # Create a temporary file to build the JSON array
          echo '[]' > /tmp/matrix.json
          
          for PACKAGE_DIR in ${PACKAGE_DIRS[@]}; do
            VERSION_DIRS=$(find $PACKAGE_DIR/v* -mindepth 0 -maxdepth 0 -type d -print)
            for VERSION_DIR in ${VERSION_DIRS[@]}; do
              PACKAGE=$(basename $PACKAGE_DIR)

              # Check if the package is in the whitelist
              if [[ " ${WHITELISTED_PACKAGES[@]} " =~ " ${PACKAGE} " ]]; then
                VERSION=$(echo $VERSION_DIR | cut -d/ -f3)
                
                # Add entry to JSON array using jq
                jq --arg pkg "$PACKAGE" \
                   --arg ver "$VERSION" \
                   --arg pkg_dir "$PACKAGE_DIR" \
                   --arg ver_dir "$VERSION_DIR" \
                   '. += [{"package": $pkg, "version": $ver, "package_dir": $pkg_dir, "version_dir": $ver_dir}]' \
                   /tmp/matrix.json > /tmp/matrix_new.json
                mv /tmp/matrix_new.json /tmp/matrix.json
              fi
            done
          done
          
          # Read the final JSON and set it as output (compact format, no pretty printing)
          MATRIX_ENTRIES=$(jq -c '.' /tmp/matrix.json)
          echo "matrix=$MATRIX_ENTRIES" >> $GITHUB_OUTPUT
          echo "Matrix entries: $MATRIX_ENTRIES"

  publish-packages:
    needs: discover-packages
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include: ${{ fromJson(needs.discover-packages.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Carvel tools
        shell: bash
        run: curl -L https://carvel.dev/install.sh | bash

      # - name: Calculate variables
      #   shell: bash
      #   run: |
      #     REPOSITORY_OWNER=${{github.repository_owner}}
      #     echo "REPOSITORY_OWNER=${REPOSITORY_OWNER,,}" >>${GITHUB_ENV}
      #     echo "REPOSITORY_TAG=${GITHUB_REF##*/}" >>${GITHUB_ENV}
      #     echo "REPOSITORY_SHA_TAG=sha-${GITHUB_SHA::7}" >>${GITHUB_ENV}

      - name: Publish package ${{ matrix.package }}:${{ matrix.version }}
        run: |
          ./scripts/push-extension.sh \
            --registry ghcr.io/${{github.repository}} \
            --registry-username ${{github.actor}} \
            --registry-password ${{secrets.GITHUB_TOKEN}} \
            ${{ matrix.package }} ${{ matrix.version }}
